.. _postprocess:

Postprocessing Laplace equation
-------------------------------

.. note::

   This example requires the external package `pygmsh <https://pypi.org/project/pygmsh/>`_.

In this example, `pygmsh <https://pypi.org/project/pygmsh/>`_ is used to
generate a disk, replacing the default square of :class:`skfem.mesh.MeshTri`
in :ref:`poisson`.

A basic postprocessing step in finite element analysis is evaluating linear
forms over the solution. For the boundary value problem of :ref:`poisson`, the integral
of the solution (normalized by the area) is the 'Boussinesq k-factor'; for
the square it's roughly 0.03514, for the circle 1/Pi/8 = 0.03979. Linear forms
are easily evaluated in skfem using the 1-D arrays assembled using the
@LinearForm decorator. In :ref:`poisson`, the linear form required for simple
integration happens to be the same one used on the right-hand side of the
differential equation, so it's already to hand.

Another is interpolation; i.e. evaluation of the solution at a
specified point which isn't necessarily a node of the mesh.  For this
problem, the maximum of the solution (normalized by the area) is the
'Boussinesq k'-factor'; by symmetry, this occurs for squares (k' =
0.07363) and circles (k' = 1/Pi/4) at the centre and so can be
evaluated by interpolation.

.. literalinclude:: ex12.py
   :linenos:
