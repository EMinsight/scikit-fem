.. _navierstokes:

Navier–Stokes equations
-----------------------

.. note::
   This example requires the external packages `pygmsh <https://pypi.org/project/pygmsh/>`_ and `pacopy <https://pypi.org/project/pacopy/>`_.


In this example, `pacopy <https://pypi.org/project/pacopy/>`_ is used to extend the example :ref:`backwardfacingstep0` from creeping flow over a backward-facing step to finite Reynolds number; as in the example on the bifurcation of the Bratu–Gelfand problem :ref:`bratug`, this means defining a residual for the nonlinear problem and its derivatives with respect to the solution and to the parameter (here Reynolds number).

Compared to the Stokes equations of example :ref:`backwardfacingstep0`, the Navier–Stokes equation has one additional term.  If the problem is nondimensionalized using a characteristic length (here the height of the step) and velocity (the average over the inlet), this term appears multiplied by the Reynolds number, which thus serves as a convenient parameter for numerical continuation.

.. math::

   -\nabla^2 \mathbf u + \nabla p - \mathrm{Re}\; \mathbf u \cdot\nabla\mathbf u = 0

   \nabla\cdot\mathbf u = 0.

The weak formulation can be written

.. math::

   (\nabla\mathbf v, \nabla\mathbf u) - (\nabla\cdot\mathbf v, p)
   + (q, \nabla\cdot\mathbf u)
     - \mathrm{Re}\; (\mathbf v, \mathbf u\cdot\nabla\mathbf u) = 0.

In shorthand,

.. math::

   F (u; \mathrm{Re}) = S (u) - \mathrm{Re}\; N (u) = 0

where the linear (creeping or Stokes) part is

.. math::

   S (u) = \begin{bmatrix}
   (\nabla \mathbf v, \nabla \mathbf v) & -(\nabla\cdot \mathbf v, q) \\
   (q_i, \nabla\cdot \mathbf v) & 0
   \end{bmatrix}\begin{Bmatrix} \mathbf u \\ p\end{Bmatrix}
   \equiv \mathsf S u

and the nonlinear part is

.. math::

   N(u) = (\mathbf v, \mathbf u\cdot\nabla\mathbf u).
   

The Jacobian is

.. math::

   J(u; \mathrm{Re}) \equiv \frac{\partial F}{\partial u} = \mathsf S -\mathrm{Re}\; N'(u)

which augments the matrix of the Stokes parts with the Jacobian of the nonlinear terms,

.. math::
   N' (u) =
   (\mathbf v,
   \mathbf u\cdot\nabla\mathbf\delta u
   + \delta\mathbf u\cdot\nabla\mathbf u).

The stream-lines are plotted at Re = 150, 450, and 750 (as in figures 3 *a*–*c* of Barkley, Gomes, & Henderson 2002), these values being specified as ``milestones`` for :func:`~pacopy.natural`.

.. figure:: ex27-150.0-psi.png

.. figure:: ex27-450.0-psi.png
	    
.. figure:: ex27-750.0-psi.png

   The stream-lines at Re = 150, 450, and 750.

.. literalinclude:: ex27.py
    :linenos:
