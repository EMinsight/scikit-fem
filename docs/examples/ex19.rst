Heat equation
-------------

.. note::
   This example requires the external package `scikit-sparse <https://github.com/scikit-sparse/scikit-sparse>`_.

The solutions of the heat equation

.. math::
    \frac{\partial T}{\partial t} = \kappa\Delta T

in various tensor-product domains consist of the sum of modes which
are tensor-products of the modes on the factor-domains (Carslaw &
Jaegar 1959, ยง5.6).

* Carslaw, H. S., & J. C. Jaeger (1959). Conduction of Heat in Solids (2nd ed.). Oxford University Press

For example, in the rectangle :math:`|x| < w_0, |y| < w_1`, with
homogeneous Dirichlet boundary conditions, the modes are products of a
cosine in each direction,

.. math::
    \exp \left\{
      -\frac{\kappa\pi^2 t}{4}
      \left(
        \frac{2n_0 + 1}{w_0^2} + \frac{2n_1 + 1}{w_1^2}
      \right)
    \right\}
    \cos\frac{\pi x}{2w_0}\cos\frac{\pi y}{2w_1}   


for :math:`n_0, n_1 = 0, 1, 2, \ldots`.

Here we simulate the decay of the fundamental, :math:`n_0 = n_1 = 0`,
discretizing time using the generalized ('theta method') trapezoidal
rule.

For a constant time-step, this leads to a linear algebraic problem at
each time with the same matrix but changing right-hand side.  This
motivates factoring the matrix; since it is symmetric in the Galerkin
finite element method, Cholesky's algorithm can be used.

An efficient sparse implementation of this is available in the external Python
package `scikit-sparse <https://github.com/scikit-sparse/scikit-sparse>`_ which
in turn requires the CHOLMOD library from `SuiteSparse
<http://faculty.cse.tamu.edu/davis/suitesparse.html>`_.  The latter may not be
available for all systems.

The complete source code reads as follows:

.. literalinclude:: ex19.py
   :linenos:
